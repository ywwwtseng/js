import { PropsWithChildren } from 'react';
export interface TypographyProps extends PropsWithChildren {
    variant?: 'heading' | 'text' | 'caption';
    as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'span' | 'p' | 'b';
    color?: 'currentColor' | 'text.primary' | 'text.secondary' | string;
    align?: 'left' | 'center' | 'right' | 'justify';
    weight?: number;
    size?: 12 | 11 | 10 | 9 | 8 | 7 | 6 | 5 | 4 | 3 | 2 | 1;
    className?: string;
    ellipsis?: boolean;
    lineClamp?: number;
    capitalize?: boolean;
    whitespacePreWrap?: boolean;
    noWrap?: boolean;
    dangerouslySetInnerHTML?: boolean;
    fontFamily?: string;
    i18n: string;
    params?: Record<string, string | number>;
}
export declare function Typography({ variant, as, color, align, weight, size, className, ellipsis, lineClamp, capitalize, whitespacePreWrap, noWrap, dangerouslySetInnerHTML, i18n, params, children, }: TypographyProps): import("react").DOMElement<{
    dangerouslySetInnerHTML: {
        __html: import("react").ReactNode;
    };
    className: string;
    style: {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    };
} | {
    children: import("react").ReactNode;
    className: string;
    style: {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    } | {
        whiteSpace?: string;
        textTransform?: string;
        WebkitLineClamp?: number;
        display?: string;
        WebkitBoxOrient?: string;
        overflow?: string;
        textOverflow?: string;
        fontSize: string;
        lineHeight: string;
        textAlign: "center" | "left" | "right" | "justify";
        color: string;
        fontWeight: number;
    };
}, Element>;
